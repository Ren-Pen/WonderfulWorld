cmake_minimum_required(VERSION 3.5.0)

set(LIB_NAME "@SLIMENANO_PROJECT_LIB_NAME@")
set(NAMESPACE "@SLIMENANO_PROJECT_NAMESPACE@")

project(
    Slimenano-${LIB_NAME}
    VERSION @SLIMENANO_PROJECT_VERSION@
    DESCRIPTION "This is a Slimenano free ${LIB_NAME} library"
    LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

set(SRC_DIR ${PROJECT_SOURCE_DIR}/src)
set(GLOBAL_INCLUDE_DIR "@SLIMENANO_GLOBAL_INCLUDE_PATH@")

set(SRC_FILES
    @SLIMENANO_PROJECT_SOURCE_FILES@
)

set(LIBRARY_TARGET_NAME SlimenanoPackageTarget${NAMESPACE}${LIB_NAME})

add_library(${LIBRARY_TARGET_NAME} ${SRC_FILES})

target_include_directories(${LIBRARY_TARGET_NAME} PUBLIC
    $<BUILD_INTERFACE:${SRC_DIR}>
    $<BUILD_INTERFACE:${GLOBAL_INCLUDE_DIR}>
    $<INSTALL_INTERFACE:@SLIMENANO_PROJECT_INSTALL_HEADER_PREFIX@>
)

target_compile_features(${LIBRARY_TARGET_NAME} PUBLIC cxx_std_20)

if(MSVC)
    target_compile_options(${LIBRARY_TARGET_NAME} PRIVATE /W4 /WX)
else()
    target_compile_options(${LIBRARY_TARGET_NAME} PRIVATE -Wall -Wextra -Wpedantic -Werror)
endif()

set(REGISTRY_LIBRARY_DEPENDS_LIST @REGISTRY_LIBRARY_DEPENDS_LIST@)

foreach(REGISTRY_DEPEND ${REGISTRY_LIBRARY_DEPENDS_LIST})
    set(LIBRARY_ACCESS "PUBLIC")
    if(${REGISTRY_DEPEND} MATCHES ".*\\.PRIVATE")
        set(LIBRARY_ACCESS "PRIVATE")
        STRING(REPLACE ".PRIVATE" "" REGISTRY_DEPEND ${REGISTRY_DEPEND})
    endif()
    message(STATUS "[SLIMENANO] ${LIB_NAME} DEPEND ON ${REGISTRY_DEPEND} ACCESS ${LIBRARY_ACCESS}")
    target_link_libraries(${LIBRARY_TARGET_NAME} ${LIBRARY_ACCESS} ${NAMESPACE}::${REGISTRY_DEPEND})
endforeach()

add_library(${NAMESPACE}::${LIB_NAME} ALIAS ${LIBRARY_TARGET_NAME})

set_target_properties(${LIBRARY_TARGET_NAME} PROPERTIES EXPORT_NAME ${LIB_NAME})
set_target_properties(${LIBRARY_TARGET_NAME} PROPERTIES OUTPUT_NAME ${LIB_NAME})

install(TARGETS ${LIBRARY_TARGET_NAME} EXPORT ${NAMESPACE}${LIB_NAME}Targets
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)

@SLIMENANO_PROJECT_INCLUDES_INSTALL@

install(EXPORT ${NAMESPACE}${LIB_NAME}Targets
    NAMESPACE ${NAMESPACE}::
    DESTINATION lib/cmake/${NAMESPACE}
)

include(CMakePackageConfigHelpers)
write_basic_package_version_file(
    ${CMAKE_CURRENT_BINARY_DIR}/${NAMESPACE}${LIB_NAME}ConfigVersion.cmake
    VERSION ${PROJECT_VERSION}
    COMPATIBILITY SameMajorVersion
)

install(
    FILES ${CMAKE_CURRENT_BINARY_DIR}/${NAMESPACE}${LIB_NAME}ConfigVersion.cmake
    DESTINATION lib/cmake/${NAMESPACE}
)

@SLIMENANO_PROJECT_SUB_CONTENT@